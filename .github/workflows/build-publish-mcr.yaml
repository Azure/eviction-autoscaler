name: Build and publish to ACR

on:
  push:
    branches:
      - main  # Or your release branch

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on:
      labels: [self-hosted, "1ES.Pool=1es-aks-eviction-autoscaler-pool-ubuntu"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install tools
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq make docker.io ca-certificates apt-transport-https gnupg lsb-release

        # Ensure Azure CLI is available
        if ! command -v az >/dev/null 2>&1; then
          echo "Installing Azure CLI..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        fi

        # Install ko
        curl -LO https://github.com/google/ko/releases/download/v0.13.0/ko-linux-amd64
        chmod +x ko-linux-amd64 && sudo mv ko-linux-amd64 /usr/local/bin/ko

        # Install yq (ensure we use sudo to move it into /usr/local/bin)
        curl -sSfL https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64 -o /tmp/yq
        sudo mv /tmp/yq /usr/local/bin/yq
        sudo chmod +x /usr/local/bin/yq

        # Install cosign
        curl -LO https://github.com/sigstore/cosign/releases/download/v2.0.0/cosign-linux-amd64
        chmod +x cosign-linux-amd64 && sudo mv cosign-linux-amd64 /usr/local/bin/cosign

        # Install trivy so trivy_scan() won't need to install it at runtime
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.12.0
    - name: 'Login the ACR'
      env:
        RELEASE_ACR: AKSMCRImagesCommon #owned by aks dev infra
      run: |
        az login --identity
        az acr login -n ${{ secrets.AZURE_REGISTRY }}
        ./hack/release.sh
